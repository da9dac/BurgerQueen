저희가 메뉴 클래스에서
public void printMenu()
이 메소드를 만들 때

for (Product product : products
상품정보를 읽어오기 위해서

private Product[] products;
상품저장소 클래스에 있는 배열을 가져와서 사용해서

public Menu(Product[] products) {
        this.products = products;
    }
메뉴 클래스를 외부에서도 사용할 수 있게
생성자에 저 배열을 입력받게 했으니

메뉴랑은 다른 클래스인
메인 클래스에서 사용하려면

public Menu(Product[] products) {
        this.products = products;
    }
위에서 말한 저 생성자가 매개변수로 받는

상품타입의 배열을 그대로 인자로 줘야하는데

Menu menu = new Menu(products);
이렇게 저 마지막 괄호 부분에 상품 타입 배열을 넣어줘야해요

근데 저 상품타입 배열이 메인 클래스에는 없으니 가져와야하는데
아까 이 상품 저장소 클래스에서

public Product[] getProducts() {
        return products;
        //이 배열 전체를 리턴해주는 getter를 만들어서
        //애를 앞으로 메뉴나 카트 클래스에서 사용할거에요
    }
상품정보 배열을 전부 넘겨주는 메소드를 만들어논걸 사용해서

ProductRepository productRepository = new ProductRepository();
상품 저장소 클래스에 있는 메소드를 사용해야하니
상품저장소 클래스의 기본 생성자를 호출하고

Product[] products = productRepository.getProducts();
Product타입의 배열에 productRepository 방금 만든 생성자를 사용해서
getProducts() 이 메소드를 실행해서 리턴받은 배열을
넣어준거에요 Product[] products이 배열에

그리고 재를 다시 menu의
Menu menu = new Menu(products);
이 생성자를 사용하기 위한 매개변수로 보내준거죠 끝!

그냥 다른 클래스의 메소드를 사용하려면
해당 클래스의 생성자를 호출해야해요
생성자를 사용할 때는 꼭 매개변수의 갯수를 맞춰줘야해요

Menu menu = new Menu(products);
만약 애가 생정자를 꼭 하나 입력 받으라 했는데
이걸 안주고 실행하면

required: app.product.Product[]
이렇게 어떤 타입을 받으라고 나와요

이제 그러면 메뉴 출력은 끝났고!
다음이
아 맞다 이거 메인 클래스에서는 테스트 하려고 실행한거고
OrderApp 클래스로 옮겨가야해요

그리고 이제 애네를 리펙토링 해줄거에요 보기 편하게!

저 프린트문들이 똑같은게 3개니까
하나의 메소드로!

이제 애네도 나중에 재사용하기 위해 코드수도 줄일겸 리펙토링

이제 카트 클래스를 만들거에요 장바구니랑 주문을 처리하는 클래스


지금 product 클래스에는 변수가 저거 4개 잖아요
리모콘이라고 생각하면
Product 리모콘은 저 변수 4개랑 이 getter setter만
자기가 조종할 수 있어요

근데 저희는 지금 BurgerSet 리모콘을 사용해야 하는데
이게 원래라면 형변환을 못하는데
저 버거세트 리모콘이 상품 리모콘을 상속 받은 애라
상품 리모컨을 버거세트 리모컨으로 바꿔서 쓸 수 있어요

BurgerSet burgerSet = (BurgerSet) product
그래서 요렇게
사용할리모컨타입 리모컨이름 = 강제로바꿀리모컨타입 현재리모컨타입

이렇게 하면 현재 상품 리모컨이 버거세트 리모컨으로 되서

product.getName(),
product.getPrice(),
이 상품의 이름이랑 가격을 가져오는건
상품 리모컨으로 가능하니 상품 리모컨을 사용하고

burgerSet.getSide().getName(),
burgerSet.getSide().getKetchup(),
burgerSet.getDrink().getName(),
burgerSet.getDrink().hasStraw() ? "있음" : "없음"

애네는 만약 저 getSide() 메소드는 
저기 버거세트 클래스에만 있고 상품 클래스에는 없는 애니까
burgerSet 이렇게 버거세트 리모컨을 사용해서 값을 가져오는거에요!

((Side) product).getKetchup()
((Drink) product).hasStraw() ? "있음" : "없음"

이게 다 형변환이에요
(형변환할 타입) 현재타입리모컨

getKetchup()이 케찹은 사이드 클래스에만 있고
hasStraw() 애도 음료 클래스에만 있으니까!


🍔 햄버거
(1) 새우버거   500Kcal  3500원
(2) 치킨버거   600Kcal  4000원
🍟 사이드
(3) 감자튀김   300Kcal  1000원
(4) 어니언링   300Kcal  1000원
🥤 음료
(5) 코카콜라   200Kcal  1000원
(6) 제로콜라   0Kcal  1000원
여기서 만약 사용자가 2를 눌렀으면

여기서 id가 일치하는 애를 찾아서 리턴해줘야해요

근데 이 기능은 상품저장소에서 관리하는게 더 편하니


기존 장바구니 배열에 만약
[새우버거, 치킨버거세트, 감자튀김]
이렇게 3개가 담겨있다면 기존 장바구니 길이는 3
newItems 배열은 그거의 +1이니
[ , , , ] 4개의 빈자리가 있어요

이 빈 배열에
기존 장바구니의 길이만큼의 개수를 복사해온다는 뜻인데
기존 장바구니의 0번째 인덱스부터 3개를 가져오면
0 1 2 새우버거, 치킨버거세트, 감자튀김
애네 3개를 가져와서
[ , , , ] 이 빈 배열 0번째 인덱스부터 3개를 채우면
[새우버거, 치킨버거세트, 감자튀김,   ]이렇게 마지막 한칸만 남고
빈자리는 마지막이니까 마지막 배열의 인덱스는
인덱스 길이의 -1
그러면 이 인덱스에 상품을 담아주는거에요

근데 이러면 문제가 생기는데
방금 장바구니에 담은게
새우버거세트   4500원 (감자튀김(케첩 2개), 코카콜라(빨대 있음))
  치킨버거세트   5000원 (감자튀김(케첩 2개), 제로콜라(빨대 없음))

케찹을 각각 2개 3개로 했는데
값이 적용되지 않아요

케찹을 각각 2 3개 입력해보면